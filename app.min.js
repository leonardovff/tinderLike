var interval = null, qtd = 0; function run(a = 300, b = !1, c = 99999) { null !== typeof interval && clearInterval(interval); interval = setInterval(() => action(b, c), a) } function action(a = !1, b = 99999) { qtd += 1; let d, f, g, c = !1, h = !1, i = "[" + qtd + "] "; try { g = document.querySelector("div.recCard.needsclick.active"), h = filter(g, a), filteredByKm = filterByDistance(g, b), c = 0 < h.qtd || 0 > filteredByKm.distance, d = c ? "button.recsGamepad__button--dislike" : "button.recsGamepad__button--like", f = document.querySelector(d), cardNameAge = g.querySelector("div.recCard__nameAge").textContent.split(", "), cardNameAge = { name: cardNameAge[0], age: cardNameAge[1] }, i += (c ? "Dislike" : "Like") + " at " + cardNameAge.name + " (" + cardNameAge.age + "y).", h && (h.details && (i += "\n\t- " + h.details.join(" - ")), 0 < h.qtd && (i += "\n\t- " + h.qtd + " filtered words: \n\t" + h.words.join(", "))), f.click() } catch (j) { i = j } finally { console.log(i) } } function filter(a, b) { try { const c = a.querySelector("div.recCard__openProfile").click(), d = document.querySelector("div.profileCard__textContent"), f = b.filter(i => { return d.textContent.toUpperCase().includes(i.toUpperCase()) }); let g = []; document.querySelectorAll(".profileCard__info").forEach(function (i) { g.push(i.textContent) }, this), g[g.length - 1] = g[g.length - 1].split(" ")[0] + "km"; document.querySelector("a.profileCard__backArrow").click(); return { qtd: f.length, words: f, details: g } } catch (c) { return console.log(c), !1 } } function filterByDistance(a, b) { try { a.querySelector("div.recCard__openProfile").click(); let d = []; return document.querySelectorAll(".profileCard__info").forEach(function (f) { d.push(f.textContent) }, this), realDistance = d[d.length - 1].split(" ")[0], { distance: b - realDistance } } catch (c) { return console.log(c), { distance: 1 } } } function stop() { console.log("stopped!"), clearInterval(interval) }
